-- 0. retrieve all employees along with their department

select e.name as EmployeeName, d.name as DepartmentName
from employees as e
left join departments as d on d.Id = e.DepartmentId

-- 1. retrieve all employees along with their manager

select e.name as EmployeeName, m.Name as ManagerName
from employees as e
join employees as m on e.ManagerId = m.Id

-- 2. retrieve all employees that have a vacation between 01.01.2011 and 01.01.2012

select *
from employees as e
left join vacations as v on e.Id = v.EmployeeId
where status = 'approved'
and ((year(fromdate) = 2011 or year(todate) = 2012)
or (fromdate < '2011-01-01' and todate >= '2012-01-01'))

-- 3.1. Write an SQL query to find the average salary in the "Marketing" department.(2  - subselect and join)

select avg(salary)
from employees as e
join departments as d on e.departmentid = d.id
where d.name = 'Marketing'
			
-- 3.2. Write an SQL query to find the average salary in the department which name start with 'a'.			
			
select avg(salary)
from employees as e
join departments as d on e.departmentid = d.id
where d.name like 'a%'

-- 3.3. Write an SQL query to find the average salary for each department which name start with 'a'.

select d.name, avg(salary)
from employees as e
join departments as d on e.departmentid = d.id
where d.name like 'a%'
group by d.name

-- 4. Write an SQL query to find the first 10 employees joined the company (select EmployeeName and DepartmentName)

select e.name as EmployeeName, d.Name as DepartmentName
from employees as e
join departments as d on e.departmentid = d.id
group by hiredate
limit 10

-- 5. Write a SQL query to find the names of all employees from the departments "Quality Assurance" or "Marketing" whose hire year is between 2005 and 2009 (2 - subselect and join)

select e.name
from employees as e
join departments as d on e.departmentid = d.id
where (d.name = 'Marketing' or d.name = 'Quality Assurance')    //  	where d.name in ('Marketing', 'Quality Assurance')
and (hiredate >= '2005-01-01' and hiredate <= '2009-12-31')		//		and year(e.hiredate) between 2005 and 2009

-- 6. Write an SQL query to find the employees that have more than two certificates

select e.name, c.Name
from employees as e
join employee_certificates as ec on e.id = ec.EmployeeId
join certificates as c on c.id = ec.CertificateId
group by e.name
having count(e.name) > 2

-- 7. select all employee names along with number of their certificates

select e.name, count(c.id)
from employees as e
join employee_certificates as ec on e.id = ec.EmployeeId
join certificates as c on c.id = ec.CertificateId
group by e.name

-- 7.1* select all employee names along with number of their certificates and certificatename

select e.name as EmployeeName, c.Name as Certificate, v.Name as ByCompany
from employees as e
join employee_certificates as ec on e.id = ec.EmployeeId
join certificates as c on c.id = ec.CertificateId
join vendors as v on v.Id = c.VendorId
order by e.name

-- 8. select all departments without employees (using left join)

select d.Name
from departments as d
left join employees as e on e.DepartmentId = d.Id and e.DepartmentId is null
group by e.Name

-- 9. select skills that are assigned to at least one employee with title 'Software Engineer'

select s.Name, count(*)
from employees as e
join titles as t on t.Id = e.TitleId
join employee_skills as es on es.EmployeeId = e.Id
join skills as s on s.Id = es.SkillId
where t.Name = 'Software Engineer'
group by s.Name

-- 10. Write an SQL query to find for each department and for each job title the total number of employees. 

select d.Name as DepartmentName, t.Name as TitleName, count(e.Name) as NumberOfEmployees
from departments as d
left join employees as e on e.DepartmentId = d.Id
left join titles as t on t.Id = e.TitleId 
group by d.Name, t.Name

-- 11. Write an SQL query to find all managers that have exactly 3 employees. Display their names and the name and their department. 

select m.Name as ManagerName, d.Name as DepartmentName
from employees as e
join employees as m on e.ManagerId = m.Id
join departments as d on d.Id = m.DepartmentId
group by e.ManagerId
having count(e.ManagerId) = 3

-- 12. Print the number of vacations per department per years requested between 2008 and 2012 along with the name of the department

select year(RequestDate), d.Name, count(d.Name)
from departments as d
left join employees as e on e.DepartmentId = d.Id
left join vacations as v on v.EmployeeId = e.Id
where year(RequestDate) between 2008 and 2012
group by d.Name
order by RequestDate

-- 13. select all employees that have more skills than certificates

select e.Name
from employees as e
join employee_skills as es on es.EmployeeId = e.Id
left join employee_certificates as ec on ec.EmployeeId = e.Id
group by e.Name
having count(distinct es.SkillId) > count(distinct ec.CertificateId)

-- 14. select employees with a salary higher than that of 'Didi Marinova' (2 - subselect and join)

select name, salary
from employees
where salary > (select salary from employees where name = 'Didi Marinova');

select e2.Name, e2.Salary
from employees as e1
left join employees as e2 on 1=1
where e1.Name = 'Didi Marinova' and e2.Salary > e1.Salary
group by e2.Name;

-- 15. select employees with maximum salary (2 - subselect and left join)

select name, max(salary)
from employees
group by name
having max(salary) = (select max(salary) from employees);

select e1.Name, max(e1.salary)
from employees as e1
left join employees as e2 on 1=1
group by e1.Name
having max(e1.salary) = max(e2.salary);

